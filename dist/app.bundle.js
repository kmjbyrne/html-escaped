!function(e){var n={};function r(t){if(n[t])return n[t].exports;var u=n[t]={i:t,l:!1,exports:{}};return e[t].call(u.exports,u,u.exports,r),u.l=!0,u.exports}r.m=e,r.c=n,r.d=function(e,n,t){r.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,n){if(1&n&&(e=r(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(r.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var u in e)r.d(t,u,function(n){return e[n]}.bind(null,u));return t},r.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(n,"a",n),n},r.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},r.p="",r(r.s=0)}([function(e,n,r){e.exports=r(1)},function(e,n,r){"use strict";function t(e,n){for(var r=0;r<n.length;r++){var t=n[r];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function u(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}r.r(n);var a=function(){function e(){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e)}var n,r,u;return n=e,u=[{key:"escapeString",value:function(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}},{key:"calculatePreWhitespace",value:function(e){return e.search(/\S|$/)}},{key:"getDesignatedElements",value:function(){return document.getElementsByClassName("html-escaped-code-block")}},{key:"splitHTMLStringArray",value:function(e){return e.split(/\r\n|\r|\n/)}},{key:"determineFirstMarkupLine",value:function(n){for(var r=0;r<n.length;r++)if(n[r].includes(e.LEFT_ANGLE_BRACKET))return r;return-1}},{key:"makeEscapedHTML",value:function(n,r){for(var t=[],u=0;u<n.length;u++){var a=e.escapeString(n[u]);t.push(a.slice(r,a.length))}return t}},{key:"updateNodeInnerHTML",value:function(e,n){e.innerHTML=n}},{key:"do",value:function(){for(var n=e.getDesignatedElements(),r=0;r<n.length;r++){var t=e.splitHTMLStringArray(n[r].innerHTML),u=e.determineFirstMarkupLine(n[r]),a=e.calculatePreWhitespace(u);e.updateNodeInnerHTML(e.makeEscapedHTML(t,a))}}}],(r=null)&&t(n.prototype,r),u&&t(n,u),e}();u(a,"LEFT_ANGLE_BRACKET","<"),u(a,"RIGHT_ANGLE_BRACKET",">");var o=a;n.default=o}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,